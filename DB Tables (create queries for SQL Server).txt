create database car_rental_db

use car_rental_db

create table customer(
	id int not null identity(1,1) primary key,
	name varchar(60) not null,
	phone varchar(20) not null,
	[address] varchar(100) not null,
	cnic varchar(13) not null,
	username varchar(50) not null unique,
	[password] varchar(50) not null
)

create table manager(
	id int not null identity(1,1) primary key,
	name varchar(60) not null,
	phone varchar(20) not null,
	[address] varchar(100) not null,
	cnic varchar(13) not null,
	gender varchar(10) not null,
	salary int,
	bonuspercentage int,
	username varchar(50) not null unique,
	[password] varchar(50) not null
)

create table driver(
	id int not null identity(1,1) primary key,
	name varchar(60) not null,
	phone varchar(20) not null,
	[address] varchar(100) not null,
	cnic varchar(13) not null unique,
	gender varchar(10) not null,
	salary int,
	bonuspercentage int,
	licencenum varchar(50) not null,
	licencetype varchar(20),
	driverstatus varchar(20) not null,
	check(driverstatus in('available', 'busy'))
)

create table vehicle(
	id int not null identity(1,1) primary key,
	regnum varchar(50) not null unique,
	company varchar(50) not null,
	model varchar(50) not null,
	color varchar(50),
	rateperday int not null,
	mileage bigint,
	avgfueleco float,
	vehicletype varchar(10) not null,
	check(vehicletype in('vip', 'economy')),
	vehiclestatus varchar(20),
	check(vehiclestatus in('available','busy'))
)

create table rental(
	id int not null identity(1,1) primary key,
	vehicleid int foreign key references vehicle(id) on delete set null on update cascade,
	driverid int foreign key references driver(id) on delete set null on update cascade,
	managerid int foreign key references manager(id) on delete set null on update cascade,
	customerid int foreign key references customer(id) on delete set null on update cascade,
	usagedetails varchar(200),
	datein date not null,
	dateout date not null,
	discountpercentage int,
	tolltaxes int,
	kmused int,
	extracharges int,
	rentalstatus varchar(20) not null,
	check(rentalstatus in('pending', 'upcoming', 'fulfilled'))
)

create table booking(
	id int not null identity(1,1) primary key,
	rentalid int foreign key references rental(id) on delete no action on update cascade,
	totalfare int /*	0 if rentalstaus is pending/upcoming	*/
)

