/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.admin;

import Main.BL;
import Models.Customer;
import Models.Driver;
import Models.Manager;
import Models.Vehicle;
import com.github.lgooddatepicker.components.DatePickerSettings;
import gui.componentsmodels.NewBookingDriverListModel;
import gui.componentsmodels.NewBookingVehicleListModel;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import javax.swing.DefaultListModel;
import java.text.DateFormat;
import java.time.ZoneId;

/**
 *
 * @author ehtis
 */
public class AddNewBooking extends javax.swing.JFrame {

    DatePickerSettings dateSettings, dateSettings2;
    /**
     * Creates new form Home
     */

    DefaultListModel<NewBookingVehicleListModel> model1;
    DefaultListModel<NewBookingDriverListModel> model2;
    DateFormat dateFormat;

    public AddNewBooking() {
        dateSettings = new com.github.lgooddatepicker.components.DatePickerSettings();
        dateSettings2 = new com.github.lgooddatepicker.components.DatePickerSettings();

        BL bl = BL.getBllInstance();
        model1 = new DefaultListModel<>();
        NewBookingVehicleListModel vehicle = null;
        for (int i = 0; i < bl.getCompany().getVehiclesList().size(); i++) {
            if (bl.getCompany().getVehiclesList().get(i).getVehicleStatus().equalsIgnoreCase("available")) {
                vehicle = new NewBookingVehicleListModel(bl.getCompany().getVehiclesList().get(i));
                model1.addElement(vehicle);
            }
        }

        model2 = new DefaultListModel<>();
        NewBookingDriverListModel driver = null;
        for (int i = 0; i < bl.getCompany().getDriversList().size(); i++) {
            if (bl.getCompany().getDriversList().get(i).getDriverStatus().equalsIgnoreCase("available")) {
                driver = new NewBookingDriverListModel(bl.getCompany().getDriversList().get(i));
                model2.addElement(driver);
            }
        }
        
        dateFormat = new SimpleDateFormat("yyyy-mm-dd");

        initComponents();

        dateSettings.setDateRangeLimits(LocalDate.now(), null);
        dateSettings2.setDateRangeLimits(LocalDate.now(), null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker(dateSettings);
        jLabel3 = new javax.swing.JLabel();
        datePicker2 = new com.github.lgooddatepicker.components.DatePicker(dateSettings2);
        jLabel4 = new javax.swing.JLabel();
        customerUsernameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usageTextArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vehiclesList = new javax.swing.JList<>(model1);
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dateOutError = new javax.swing.JLabel();
        dateInError = new javax.swing.JLabel();
        usernameError = new javax.swing.JLabel();
        invalidUsernameError = new javax.swing.JLabel();
        vehicleError = new javax.swing.JLabel();
        driverCheckBox = new javax.swing.JCheckBox();
        driverPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        driversList = new javax.swing.JList<>(model2);
        driverError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(69, 109, 170));
        jPanel4.setPreferredSize(new java.awt.Dimension(820, 560));

        jPanel2.setBackground(new java.awt.Color(177, 190, 224));
        jPanel2.setPreferredSize(new java.awt.Dimension(798, 50));

        jLabel1.setText("Add New Booking");
        jLabel1.setBackground(new java.awt.Color(105, 132, 207));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        backButton.setText("Back");
        backButton.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.focus"));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(backButton)
                .addGap(243, 243, 243)
                .addComponent(jLabel1)
                .addGap(294, 294, 294))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(backButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(177, 190, 224));

        jLabel2.setText("Date Out:");
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setText("Date In:");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setText("Customer username:");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setText("Usage Details:");
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        usageTextArea.setColumns(20);
        usageTextArea.setRows(5);
        usageTextArea.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jScrollPane1.setViewportView(usageTextArea);

        jLabel6.setText("Select from available vehicles:");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        vehiclesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vehiclesList.setBackground(new java.awt.Color(177, 190, 224));
        vehiclesList.setFixedCellHeight(17);
        jScrollPane2.setViewportView(vehiclesList);

        jLabel7.setText("Vehicle");
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel8.setText("Rate (per day)");
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel9.setText("Fuel Average");
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jButton1.setText("Add");
        jButton1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.focus"));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        dateOutError.setText("Date Out is required");
        dateOutError.setForeground(new java.awt.Color(255, 0, 0));
        dateOutError.setVisible(false);

        dateInError.setText("Date In is required");
        dateInError.setForeground(new java.awt.Color(255, 0, 0));
        dateInError.setVisible(false);

        usernameError.setText("Customer Username is Required");
        usernameError.setForeground(new java.awt.Color(255, 0, 0));
        usernameError.setVisible(false);

        invalidUsernameError.setText("Invalid username");
        invalidUsernameError.setForeground(new java.awt.Color(255, 0, 0));
        invalidUsernameError.setVisible(false);

        vehicleError.setText("Vehicle must be selected");
        vehicleError.setForeground(new java.awt.Color(255, 0, 0));
        vehicleError.setVisible(false);

        driverCheckBox.setText("Need a Driver?");
        driverCheckBox.setBackground(new java.awt.Color(177, 190, 224));
        driverCheckBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        driverCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driverCheckBoxActionPerformed(evt);
            }
        });

        driverPanel.setBackground(new java.awt.Color(177, 190, 224));

        jLabel10.setText("Select from available Drivers:");
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel11.setText("Name");
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel13.setText("Phone #");
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel12.setText("Gender");
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        driversList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        driversList.setBackground(new java.awt.Color(177, 190, 224));
        driversList.setFixedCellHeight(17);
        jScrollPane3.setViewportView(driversList);

        driverError.setText("Driver must be selected");
        driverError.setForeground(new java.awt.Color(255, 0, 0));
        driverError.setVisible(false);

        javax.swing.GroupLayout driverPanelLayout = new javax.swing.GroupLayout(driverPanel);
        driverPanel.setLayout(driverPanelLayout);
        driverPanelLayout.setHorizontalGroup(
            driverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, driverPanelLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(99, 99, 99)
                .addComponent(jLabel12)
                .addGap(86, 86, 86)
                .addComponent(jLabel13))
            .addComponent(jScrollPane3)
            .addGroup(driverPanelLayout.createSequentialGroup()
                .addGroup(driverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(driverError))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        driverPanelLayout.setVerticalGroup(
            driverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(driverPanelLayout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(driverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(driverError)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerUsernameTextField))
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invalidUsernameError))
                    .addComponent(dateOutError)
                    .addComponent(dateInError)
                    .addComponent(usernameError)
                    .addComponent(driverCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(vehicleError, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(65, 65, 65)
                            .addComponent(jLabel8)
                            .addGap(48, 48, 48)
                            .addComponent(jLabel9))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(driverPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(dateOutError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(dateInError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(customerUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invalidUsernameError))
                        .addGap(3, 3, 3)
                        .addComponent(usernameError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(driverCheckBox))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vehicleError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(driverPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        driverPanel.setVisible(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(128, 128, 128))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
        AdminBookings page = new AdminBookings();
        page.start();
        this.setVisible(false);
    }//GEN-LAST:event_backButtonMouseClicked

    private void driverCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driverCheckBoxActionPerformed
        // TODO add your handling code here:
        if (driverCheckBox.isSelected()) {
            driverPanel.setVisible(true);
        }
        if (!driverCheckBox.isSelected()) {
            driverPanel.setVisible(false);
        }
    }//GEN-LAST:event_driverCheckBoxActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (datePicker1.getDate() != null) {
            dateOutError.setVisible(false);
            if (datePicker2.getDate() != null) {
                dateInError.setVisible(false);
                if (!customerUsernameTextField.getText().equals("")) {
                    customerUsernameTextField.setVisible(false);
                    if (vehiclesList.getSelectedIndex() >= 0) {
                        vehicleError.setVisible(false);
                        if (driverCheckBox.isSelected()) {
                            if (driversList.getSelectedIndex() >= 0) {
                                driverError.setVisible(false);

                                BL bl = BL.getBllInstance();
                                Manager manager = bl.getCompany().getSession();
                                Driver driver = bl.getDriver(driversList.getSelectedValue().getId());
                                Vehicle vehicle = bl.getVehicle(vehiclesList.getSelectedValue().getId());
                                Customer customer = bl.getCustomer(customerUsernameTextField.getText());

                                LocalDate out = datePicker1.getDate();
                                Date dateOut = Date.from(out.atStartOfDay(ZoneId.systemDefault()).toInstant());
                                LocalDate in = datePicker2.getDate();
                                Date dateIn = Date.from(in.atStartOfDay(ZoneId.systemDefault()).toInstant());

                                bl.addBooking(vehicle, driver, manager, customer, usageTextArea.getText(), dateOut, dateIn, 0, 0, 0, 0);

                                AdminBookings page = new AdminBookings();
                                page.start();
                                this.setVisible(false);

                            } else {
                                driverError.setVisible(true);
                            }
                        } else {

                            BL bl = BL.getBllInstance();
                            Manager manager = bl.getCompany().getSession();
                            Vehicle vehicle = bl.getVehicle(vehiclesList.getSelectedValue().getId());
                            Customer customer = bl.getCustomer(customerUsernameTextField.getText());

                            LocalDate out = datePicker1.getDate();
                            Date dateOut = Date.from(out.atStartOfDay(ZoneId.systemDefault()).toInstant());
                            LocalDate in = datePicker2.getDate();
                            Date dateIn = Date.from(in.atStartOfDay(ZoneId.systemDefault()).toInstant());

                            bl.addBooking(vehicle, manager, customer, usageTextArea.getText(), dateOut, dateIn, 0, 0, 0, 0);

                            this.setVisible(false);
                            AdminBookings page = new AdminBookings();
                            page.start();
                        }
                    } else {
                        vehicleError.setVisible(true);
                    }
                } else {
                    usernameError.setVisible(true);
                }
            } else {
                dateInError.setVisible(true);
            }
        } else
        dateOutError.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField customerUsernameTextField;
    private javax.swing.JLabel dateInError;
    private javax.swing.JLabel dateOutError;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private com.github.lgooddatepicker.components.DatePicker datePicker2;
    private javax.swing.JCheckBox driverCheckBox;
    private javax.swing.JLabel driverError;
    private javax.swing.JPanel driverPanel;
    private javax.swing.JList<NewBookingDriverListModel> driversList;
    private javax.swing.JLabel invalidUsernameError;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea usageTextArea;
    private javax.swing.JLabel usernameError;
    private javax.swing.JLabel vehicleError;
    private javax.swing.JList<NewBookingVehicleListModel> vehiclesList;
    // End of variables declaration//GEN-END:variables
}
